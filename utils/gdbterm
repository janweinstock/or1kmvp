#!/bin/bash -e

 ##############################################################################
 #                                                                            #
 # Copyright 2018 Jan Henrik Weinstock                                        #
 #                                                                            #
 # Licensed under the Apache License, Version 2.0 (the "License");            #
 # you may not use this file except in compliance with the License.           #
 # You may obtain a copy of the License at                                    #
 #                                                                            #
 #     http://www.apache.org/licenses/LICENSE-2.0                             #
 #                                                                            #
 # Unless required by applicable law or agreed to in writing, software        #
 # distributed under the License is distributed on an "AS IS" BASIS,          #
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
 # See the License for the specific language governing permissions and        #
 # limitations under the License.                                             #
 #                                                                            #
 ##############################################################################

gdb="or1k-elf-gdb"
term="xterm"

# check if gdb and xterm can be found
$gdb  -v >/dev/null 2>&1 || { echo >&2 "$gdb not found, aborting."; exit 1; }
$term -v >/dev/null 2>&1 || { echo >&2 "$term not found, aborting."; exit 1; }

name="" # Name of the processor to connect to
host="" # Simulation host
port="" # Port to use for the GDB remote serial protocol
syms="" # Location(s) of the symbol file(s)

# parse command line
while getopts "n:h:p:s:" opt; do
    case "$opt" in
        n) name="$OPTARG" ;;
        h) host="$OPTARG" ;;
        p) port="$OPTARG" ;;
        s) syms="$syms $OPTARG" ;;
        ?) echo "Usage $(basename $0) [-n name] [-h host] [-p port] [-s syms]"
           exit 1
    esac
done

test "$name" != "" || { echo >&2 "cpu name cannot be empty"; exit 1; }
test "$port" != "" || { echo >&2 "gdb port not specified"; exit 1; }

args="--nx -ex=\"set confirm off\""
for s in $syms; do
    args="$args -ex=\"add-symbol-file $s\""
done
args="$args -ex=\"set confirm on\""
args="$args -ex=\"target remote $host:$port\""
$term -fa 'Monospace' -fs 12 -T "$name" -e "$gdb $args" &
